security:
    encoders:
        App\Entity\User\User:
            algorithm: argon2i

    providers:
        app_user_provider:
            entity:
                class: App\Entity\User\User
                property: username

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        authenticate:
            pattern: ^/authenticate
            methods: [POST]
            stateless: true
            anonymous: true
            json_login:
                check_path: /authenticate
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        main:
            pattern: ^/
            stateless: true
            anonymous: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator


    access_control:
        - { path: ^/authenticate, roles: IS_AUTHENTICATED_ANONYMOUSLY }

        - { path: ^/user, roles: IS_AUTHENTICATED_FULLY }

        - { path: ^/example, roles: IS_AUTHENTICATED_FULLY, methods: [POST, PUT, DELETE] }

        - { path: ^/, roles: IS_AUTHENTICATED_ANONYMOUSLY }
